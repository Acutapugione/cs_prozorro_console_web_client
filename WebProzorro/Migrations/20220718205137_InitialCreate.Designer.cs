// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebProzorro.Data;

#nullable disable

namespace WebProzorro.Migrations
{
    [DbContext(typeof(WebProzorroContext))]
    [Migration("20220718205137_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebProzorro.Models.CategoryDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClassificationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DateModified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcuringEntityId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("ProcuringEntityId");

                    b.ToTable("CategoryDTOs");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Сriterion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileDTOId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileDTOId");

                    b.ToTable("Сriterions");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.BaseAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BaseAddress");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseAddress");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VendorDTOId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("VendorDTOId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Classification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scheme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classifications");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.ContactPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactPoints");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Document", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DateModified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatePublished")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorDTOId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("VendorDTOId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Identifier", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LegalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDTOId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Scheme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductDTOId");

                    b.ToTable("Identifiers");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryDTOId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductDTOId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProfileDTOId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sizes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryDTOId");

                    b.HasIndex("ProductDTOId");

                    b.HasIndex("ProfileDTOId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.MinOrderValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MinOrderValues");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.ProcuringEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("ContactPointId")
                        .HasColumnType("int");

                    b.Property<string>("IdentifierId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ContactPointId");

                    b.HasIndex("IdentifierId");

                    b.ToTable("ProcuringEntities");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Requirement", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MinValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RequirementGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequirementGroupId");

                    b.HasIndex("UnitId");

                    b.ToTable("Requirements");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.RequirementGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("СriterionId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("СriterionId");

                    b.ToTable("RequirementGroups");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.RequirementResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ProductDTOId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Requirement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductDTOId");

                    b.ToTable("RequirementResponses");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("ContactPointId")
                        .HasColumnType("int");

                    b.Property<string>("IdentifierId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfferDTOId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Scale")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ContactPointId");

                    b.HasIndex("IdentifierId");

                    b.HasIndex("OfferDTOId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ValueAddetTaxIncluded")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Vendor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("ContactPointId")
                        .HasColumnType("int");

                    b.Property<string>("IdentifierId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ContactPointId");

                    b.HasIndex("IdentifierId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("WebProzorro.Models.OfferDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateModified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MinOrderValueId")
                        .HasColumnType("int");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelatedProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("ValueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MinOrderValueId");

                    b.HasIndex("ValueId");

                    b.ToTable("OfferDTOs");
                });

            modelBuilder.Entity("WebProzorro.Models.ProductDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("ClassificationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DateModified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentifierId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RelatedProfile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("IdentifierId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDTOs");
                });

            modelBuilder.Entity("WebProzorro.Models.ProfileDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClassificationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DateModified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelatedCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int>("ValueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("UnitId");

                    b.HasIndex("ValueId");

                    b.ToTable("ProfileDTOs");
                });

            modelBuilder.Entity("WebProzorro.Models.VendorDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DateCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateModified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("VendorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorDTOs");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.DeliveryAddress", b =>
                {
                    b.HasBaseType("WebProzorro.Models.Internals.BaseAddress");

                    b.Property<string>("OfferDTOId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("OfferDTOId");

                    b.HasDiscriminator().HasValue("DeliveryAddress");
                });

            modelBuilder.Entity("WebProzorro.Models.CategoryDTO", b =>
                {
                    b.HasOne("WebProzorro.Models.Internals.Classification", "Classification")
                        .WithMany("CategoryDTOs")
                        .HasForeignKey("ClassificationId");

                    b.HasOne("WebProzorro.Models.Internals.ProcuringEntity", "ProcuringEntity")
                        .WithMany()
                        .HasForeignKey("ProcuringEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classification");

                    b.Navigation("ProcuringEntity");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Сriterion", b =>
                {
                    b.HasOne("WebProzorro.Models.ProfileDTO", null)
                        .WithMany("Criteria")
                        .HasForeignKey("ProfileDTOId");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Category", b =>
                {
                    b.HasOne("WebProzorro.Models.VendorDTO", null)
                        .WithMany("Categories")
                        .HasForeignKey("VendorDTOId");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Document", b =>
                {
                    b.HasOne("WebProzorro.Models.VendorDTO", null)
                        .WithMany("Documents")
                        .HasForeignKey("VendorDTOId");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Identifier", b =>
                {
                    b.HasOne("WebProzorro.Models.ProductDTO", null)
                        .WithMany("AlternativeIdentifiers")
                        .HasForeignKey("ProductDTOId");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Image", b =>
                {
                    b.HasOne("WebProzorro.Models.CategoryDTO", null)
                        .WithMany("Images")
                        .HasForeignKey("CategoryDTOId");

                    b.HasOne("WebProzorro.Models.ProductDTO", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductDTOId");

                    b.HasOne("WebProzorro.Models.ProfileDTO", null)
                        .WithMany("Images")
                        .HasForeignKey("ProfileDTOId");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.ProcuringEntity", b =>
                {
                    b.HasOne("WebProzorro.Models.Internals.DeliveryAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProzorro.Models.Internals.ContactPoint", "ContactPoint")
                        .WithMany()
                        .HasForeignKey("ContactPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProzorro.Models.Internals.Identifier", "Identifier")
                        .WithMany()
                        .HasForeignKey("IdentifierId");

                    b.Navigation("Address");

                    b.Navigation("ContactPoint");

                    b.Navigation("Identifier");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Requirement", b =>
                {
                    b.HasOne("WebProzorro.Models.Internals.RequirementGroup", null)
                        .WithMany("Requirements")
                        .HasForeignKey("RequirementGroupId");

                    b.HasOne("WebProzorro.Models.Internals.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.RequirementGroup", b =>
                {
                    b.HasOne("WebProzorro.Models.Internals.Сriterion", null)
                        .WithMany("RequirementGroups")
                        .HasForeignKey("СriterionId");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.RequirementResponse", b =>
                {
                    b.HasOne("WebProzorro.Models.ProductDTO", null)
                        .WithMany("RequirementResponses")
                        .HasForeignKey("ProductDTOId");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Supplier", b =>
                {
                    b.HasOne("WebProzorro.Models.Internals.DeliveryAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProzorro.Models.Internals.ContactPoint", "ContactPoint")
                        .WithMany()
                        .HasForeignKey("ContactPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProzorro.Models.Internals.Identifier", "Identifier")
                        .WithMany("Suppliers")
                        .HasForeignKey("IdentifierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProzorro.Models.OfferDTO", null)
                        .WithMany("Suppliers")
                        .HasForeignKey("OfferDTOId");

                    b.Navigation("Address");

                    b.Navigation("ContactPoint");

                    b.Navigation("Identifier");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Vendor", b =>
                {
                    b.HasOne("WebProzorro.Models.Internals.BaseAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProzorro.Models.Internals.ContactPoint", "ContactPoint")
                        .WithMany()
                        .HasForeignKey("ContactPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProzorro.Models.Internals.Identifier", "Identifier")
                        .WithMany()
                        .HasForeignKey("IdentifierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("ContactPoint");

                    b.Navigation("Identifier");
                });

            modelBuilder.Entity("WebProzorro.Models.OfferDTO", b =>
                {
                    b.HasOne("WebProzorro.Models.Internals.Value", "MinOrderValue")
                        .WithMany()
                        .HasForeignKey("MinOrderValueId");

                    b.HasOne("WebProzorro.Models.Internals.Value", "Value")
                        .WithMany()
                        .HasForeignKey("ValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MinOrderValue");

                    b.Navigation("Value");
                });

            modelBuilder.Entity("WebProzorro.Models.ProductDTO", b =>
                {
                    b.HasOne("WebProzorro.Models.Internals.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProzorro.Models.Internals.Classification", "Classification")
                        .WithMany("ProductDTOs")
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProzorro.Models.Internals.Identifier", "Identifier")
                        .WithMany()
                        .HasForeignKey("IdentifierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProzorro.Models.Internals.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Classification");

                    b.Navigation("Identifier");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebProzorro.Models.ProfileDTO", b =>
                {
                    b.HasOne("WebProzorro.Models.Internals.Classification", "Classification")
                        .WithMany("ProfileDTOs")
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProzorro.Models.Internals.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProzorro.Models.Internals.Value", "Value")
                        .WithMany()
                        .HasForeignKey("ValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classification");

                    b.Navigation("Unit");

                    b.Navigation("Value");
                });

            modelBuilder.Entity("WebProzorro.Models.VendorDTO", b =>
                {
                    b.HasOne("WebProzorro.Models.Internals.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.DeliveryAddress", b =>
                {
                    b.HasOne("WebProzorro.Models.OfferDTO", null)
                        .WithMany("DeliveryAddresses")
                        .HasForeignKey("OfferDTOId");
                });

            modelBuilder.Entity("WebProzorro.Models.CategoryDTO", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Сriterion", b =>
                {
                    b.Navigation("RequirementGroups");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Classification", b =>
                {
                    b.Navigation("CategoryDTOs");

                    b.Navigation("ProductDTOs");

                    b.Navigation("ProfileDTOs");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.Identifier", b =>
                {
                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("WebProzorro.Models.Internals.RequirementGroup", b =>
                {
                    b.Navigation("Requirements");
                });

            modelBuilder.Entity("WebProzorro.Models.OfferDTO", b =>
                {
                    b.Navigation("DeliveryAddresses");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("WebProzorro.Models.ProductDTO", b =>
                {
                    b.Navigation("AlternativeIdentifiers");

                    b.Navigation("Images");

                    b.Navigation("RequirementResponses");
                });

            modelBuilder.Entity("WebProzorro.Models.ProfileDTO", b =>
                {
                    b.Navigation("Criteria");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("WebProzorro.Models.VendorDTO", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
